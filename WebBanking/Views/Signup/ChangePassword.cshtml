@model ChangePasswordViewModel

@{ ViewData["Title"] = "Edit"; }

<h1>Edit</h1>

<h4>Password</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if(ViewBag.isSuccess == true)
            {
                <div class="alert alert-success" role="alert">
                    Password has been changed Successfully
                </div>
            }
        <form asp-action="ChangePassword">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label" asp-for="CurrentPassword"></label>
                <input class="form-control" asp-for="CurrentPassword" autofocus />
                <span class="text-danger" asp-validation-for="CurrentPassword"></span>
            </div>
            <div class="form-group">
                <label class="control-label" asp-for="NewPassword"></label>
                <input class="form-control" asp-for="NewPassword"/>
                <span class="text-danger" asp-validation-for="NewPassword"></span>
            </div>
            <div class="form-group">
                <label class="control-label" asp-for="ConfirmNewPassword"></label>
                <input class="form-control" asp-for="ConfirmNewPassword"/>
                <span class="text-danger" asp-validation-for="ConfirmNewPassword"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Customer" asp-action="Edit" asp-route-id="@User.FindFirst(nameof(Customer.CustomerID)).Value" >Back to My Profile</a>
</div>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@
